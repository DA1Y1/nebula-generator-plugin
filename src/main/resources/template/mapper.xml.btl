<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package.Mapper}.${table.mapperName}">

<% if(baseResultMap){ %>
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="${package.Entity}.${entity}">
        <% if (table.isTag) { %>
        <result column="id" property="id" jdbcType="${table.idJdbcType}"/>
        <% } %>
        <% if (table.isEdge) { %>
        <result column="_src" property="src" jdbcType="${table.idJdbcType}"/>
        <result column="_dst" property="dst" jdbcType="${table.idJdbcType}"/>
        <% } %>
<% for(field in table.fields){ %>
   <% /** 生成主键排在第一位 **/ %>
   <% if(field.keyFlag){ %>
        <id column="${field.name}" property="${field.propertyName}"  jdbcType="${field.jdbcType}" />
   <% } %>
<% } %>
<% for(field in table.commonFields){ %>
    <% /** 生成公共字段 **/ %>
        <result column="${field.name}" property="${field.propertyName}" jdbcType="${field.jdbcType}"  />
<% } %>
<% for(field in table.fields){ %>
   <% /** 生成普通字段 **/ %>
   <% if(!field.keyFlag){ %>
        <result column="${field.name}" property="${field.propertyName}" jdbcType="${field.jdbcType}"  />
   <% } %>
<% } %>
    </resultMap>
<% } %>

<% if(baseColumnList){ %>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
<% for(field in table.commonFields){ %>
        ${field.columnName},
<% } %>
        ${table.fieldNames}
    </sql>
<% } %>

    <!-- 插入点或边 -->
    <insert id="insert" parameterType="${package.Entity}.${entity}">
        insert ${table.tableClass} `${table.name}` (
             <trim suffixOverrides=",">
                <% for (field in table.fields){%>
                <if test="${field.propertyName} != null">
                    ${field.name},
                </if>
                <%}%>
             </trim>
        <%if(table.isTag){%>
        ) values #{id} :(
        <%}%>
        <%if(table.isEdge){%>
        ) values #{src} -> #{dst} :(
        <%}%>
            <trim suffixOverrides=",">
                <% for (field in table.fields){%>
                <if test="${field.propertyName} != null">
                    #{${field.propertyName}},
                </if>
                <% } %>
             </trim>
        )
    </insert>

    <!-- 批量插入点或边-->
    <insert id="insertBatch" parameterType="${package.Entity}.${entity}" >
        insert ${table.tableClass} `${table.name}`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <% for (field in table.fields) { %>
            ${field.name},
            <% } %>
        </trim>
        values
        <foreach collection ="list" item="item" separator =",">
            <% if (table.isTag) { %>
            #{item.id} :
            <% } %>
            <% if (table.isEdge) { %>
            #{item.src} -> #{item.dst} :
            <% } %>
            <trim prefix="(" suffix=")" suffixOverrides =",">
                <% for (field in table.fields) { %>
                #{item.${field.propertyName}},
                <% } %>
            </trim>
        </foreach >
    </insert>

    <!-- 更新点或边 -->
    <update id="update" parameterType="${package.Entity}.${entity}">
        UPDATE ${table.tableClass} ON `${table.name}`
        <%if(table.isTag){%>
            #{id}
        <%}%>
        <%if(table.isEdge){%>
            #{src} -> #{dst}
        <%}%>
        <trim prefix="set" suffixOverrides=",">
        <% for (field in table.fields){%>
            <if test="${field.propertyName} != null">
                ${field.name} = #{${field.propertyName}},
            </if>
        <%}%>
        </trim>
    </update>


    <% if(table.isTag) { %>
    <!-- 查询点 -->
    <select id="select" resultType="${package.Entity}.${entity}">
        match (v:`${table.name}`) where id(v) == #{id} return
        <trim suffixOverrides=",">
            id(v) as id,
            <% for (field in table.fields) { %>
            v.${field.name} as ${field.propertyName},
            <% } %>
        </trim>
    </select>

    <!-- 批量查询点 -->
    <select id="selectBatch" resultType="${package.Entity}.${entity}">
        match (v:`${table.name}`) where id(v) in [
        <foreach collection="list" item="item" separator =",">
            #{item}
        </foreach>
        ] return
        <trim suffixOverrides=",">
            id(v) as id,
            <% for (field in table.fields) { %>
            v.${field.name} as ${field.propertyName},
            <% } %>
        </trim>
    </select>
    <% } %>


    <% if (table.isEdge) { %>
    <!-- 查询边 -->
    <select id="select" resultType="${package.Entity}.${entity}">
        FETCH PROP ON `${table.name}` #{src} -> #{dst} yield
        <trim suffixOverrides=",">
            ${table.name}._src as src,
            ${table.name}._dst as dst,
            <% for (field in table.fields) { %>
            ${table.name}.${field.name} as ${field.propertyName},
            <% } %>
        </trim>
    </select>

    <!-- 批量查询边-->
    <select id="selectBatch" resultType="${package.Entity}.${entity}">
        FETCH PROP ON `${table.name}`
        <foreach collection="list" item="item" separator =",">
            #{item.src} -> #{item.dst}
        </foreach>
        yield
        <trim suffixOverrides=",">
            ${table.name}._src as src,
            ${table.name}._dst as dst,
            <% for (field in table.fields) { %>
            ${table.name}.${field.name} as ${field.propertyName},
            <% } %>
        </trim>
    </select>
    <% } %>


    <!-- 删除点或边 -->
    <delete id="delete" parameterType="java.lang.String">
        <% if (table.isTag) { %>
        delete vertex #{id}
        <% } %>
        <% if (table.isEdge) { %>
        delete edge `${table.name}` #{src} -> #{dst}
        <% } %>
    </delete>

    <!-- 批量删除点或边 -->
    <delete id="deleteBatch"
    <% if (table.isTag) { %>
    parameterType="java.lang.String">
    <% } %>
    <% if (table.isEdge) { %>
    parameterType="${package.Entity}.${entity}">
    <% } %>
    <% if (table.isTag) { %>
        delete vertex
        <foreach collection="list" item="item"  separator =",">
            #{item}
        </foreach>
    <% } %>
    <% if (table.isEdge) { %>
        delete edge `${table.name}`
        <foreach collection="batch" item="item"  separator =",">
            #{item.src} -> #{item.dst}
        </foreach>
    <% } %>
    </delete>


</mapper>
